<?xml version="1.0" encoding="UTF-8"?>
<project name="instinct-example" default="all" basedir=".">
    <property name="project.longname" value="Instinct Behaviour Driven Development (BDD) Framework Examples"/>
    <property name="project.shortname" value="instinct-example"/>
    <property name="project.version.major" value="0"/>
    <property name="project.version.minor" value="1.9"/>
    <property name="version-status" value=""/>
    <property name="project.version.full" value="${project.version.major}.${project.version.minor}${version-status}"/>

    <property name="build.dir" value="build"/>
    <property name="lib.dir" value="lib"/>
    <property name="src.dir" value="src"/>
    <property name="main.dir" value="${src.dir}/main"/>
    <property name="spec.dir" value="${src.dir}/spec"/>
    <property name="main.java.src.dir" value="${main.dir}/java"/>
    <property name="spec.java.src.dir" value="${spec.dir}/java"/>
    <property name="main.scala.src.dir" value="${main.dir}/scala"/>
    <property name="spec.scala.src.dir" value="${spec.dir}/scala"/>
    <property name="spec.resources.dir" value="${spec.dir}/resources"/>
    <property name="main.classes.dir" value="${build.dir}/main-classes"/>
    <property name="spec.classes.dir" value="${build.dir}/spec-classes"/>
    <property name="release.dir" value="${build.dir}/release"/>

    <property name="project.zip" value="${project.shortname}-${project.version.full}.zip"/>
    <property name="instinct.jar" value="${lib.dir}/instinct-${project.version.full}.jar"/>

    <property name="compile.unchecked" value="on"/>
    <property name="compile.deprecation" value="on"/>
    <property name="compile.force" value="never"/>

    <path id="main.java.class.path">
        <fileset dir="${basedir}">
            <include name="${instinct.jar}"/>
        </fileset>
        <pathelement location="${main.classes.dir}"/>
    </path>
    <path id="main.scala.class.path">
        <path refid="main.java.class.path"/>
        <fileset dir="${basedir}">
            <include name="${lib.dir}/scala-*.jar"/>
        </fileset>
    </path>
    <path id="spec.java.class.path">
        <path refid="main.java.class.path"/>
        <fileset dir="${basedir}">
            <include name="${lib.dir}/cglib-nodep-*.jar"/>
            <include name="${lib.dir}/jmock-*.jar"/>
            <include name="${lib.dir}/objenesis-*.jar"/>
            <include name="${lib.dir}/ant-1.*.jar"/>
            <include name="${lib.dir}/hamcrest-all-*.jar"/>
            <include name="${lib.dir}/junit-*.jar"/>
            <include name="${lib.dir}/functionaljava-*.jar"/>
        </fileset>
        <pathelement location="${spec.classes.dir}"/>
        <pathelement location="${spec.resources.dir}"/>
    </path>
    <path id="spec.scala.class.path">
        <path refid="main.scala.class.path"/>
        <path refid="spec.java.class.path"/>
    </path>

    <taskdef resource="instincttask.properties" classpathref="spec.scala.class.path"/>
    <taskdef resource="scala/tools/ant/antlib.xml" classpathref="main.scala.class.path"/>

    <target name="all" depends="clean,release"/>
    <target name="clean" depends="-clean"/>
    <target name="run-specs" depends="clean,-run-specs,-run-junit3-integration,-run-junit4-integration"/>
    <target name="release" depends="clean,run-specs,-release-zip"/>

    <target name="-clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="-generate">
        <copy todir="${spec.classes.dir}">
            <fileset dir="${spec.resources.dir}" includes="**/*"/>
        </copy>
    </target>

    <target name="-release-zip">
        <mkdir dir="${release.dir}"/>
        <zip destfile="${release.dir}/${project.zip}" filesonly="true">
            <fileset dir="${basedir}" includes="**/*" excludes="**/*.svn,${build.dir}/**/*,i-build/**/*"/>
        </zip>
    </target>

    <target name="-compile-java" depends="-generate">
        <compile.java.macro classpath.ref="main.java.class.path" src.dir="${main.java.src.dir}" output.dir="${main.classes.dir}"
                src.path="${main.java.src.dir}"/>
        <compile.java.macro classpath.ref="spec.java.class.path" src.dir="${spec.java.src.dir}" output.dir="${spec.classes.dir}"
                src.path="${spec.java.src.dir}"/>
    </target>

    <target name="stack" depends="-compile-scala">
        <java classname="com.googlecode.instinct.scala.Runner" fork="true" classpathref="spec.scala.class.path"/>
    </target>

    <target name="-compile-scala" depends="-generate">
        <compile.scala.macro classpath.ref="main.scala.class.path" output.dir="${main.classes.dir}" src.path="${main.scala.src.dir}"/>
        <compile.scala.macro classpath.ref="spec.scala.class.path" output.dir="${spec.classes.dir}" src.path="${spec.scala.src.dir}"/>
    </target>

    <target name="-run-specs" depends="-compile-java,-compile-scala">
        <instinct failureproperty="specs-failed">
            <classpath refid="spec.scala.class.path"/>
            <specifications dir="${spec.classes.dir}" groups="osdc"/>
            <formatter type="brief"/>
        </instinct>
        <fail if="specs-failed" message="Specifications failed."/>
    </target>

    <target name="-run-junit3-integration" depends="-compile-java">
        <junit failureproperty="tests-failed" fork="true" forkmode="perBatch">
            <classpath refid="spec.java.class.path"/>
            <test name="com.googlecode.instinct.example.junit.StackJUnitSuite"/>
            <formatter type="brief" usefile="false"/>
        </junit>
        <fail if="tests-failed" message="JUnit 3 integration suite(s) failed."/>
    </target>

    <target name="-run-junit4-integration" depends="-compile-java">
        <junit failureproperty="tests-failed" fork="true" forkmode="perBatch">
            <classpath refid="spec.java.class.path"/>
            <test name="com.googlecode.instinct.example.junit.StackJUnit4Suite"/>
            <test name="com.googlecode.instinct.example.csvreader.junit.CsvReaderJUnitTests"/>
            <formatter type="brief" usefile="false"/>
        </junit>
        <fail if="tests-failed" message="JUnit 4 integration suite(s) failed."/>
    </target>

    <macrodef name="compile.java.macro">
        <attribute name="src.dir"/>
        <attribute name="output.dir"/>
        <attribute name="classpath.ref"/>
        <attribute name="src.path"/>
        <sequential>
            <mkdir dir="@{output.dir}"/>
            <javac source="1.5" srcdir="@{src.dir}" destdir="@{output.dir}" classpathref="@{classpath.ref}" debug="true"
                    debuglevel="source,lines,vars" deprecation="false" optimize="true">
                <src>
                    <path path="@{src.path}"/>
                </src>
                <patternset includes="**/*.java"/>
                <compilerarg value="-Xlint"/>
            </javac>
        </sequential>
    </macrodef>

    <macrodef name="compile.scala.macro">
        <attribute name="classpath.ref"/>
        <attribute name="src.path"/>
        <attribute name="output.dir"/>
        <sequential>
            <mkdir dir="@{output.dir}"/>
            <scalac classpathref="@{classpath.ref}" destdir="@{output.dir}" force="${compile.force}" deprecation="${compile.deprecation}"
                    unchecked="${compile.unchecked}">
                <src>
                    <path path="@{src.path}"/>
                </src>
                <patternset includes="**/*.scala"/>
            </scalac>
        </sequential>
    </macrodef>


</project>
