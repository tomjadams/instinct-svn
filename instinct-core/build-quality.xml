<?xml version="1.0" encoding="UTF-8"?>
<project name="instinct-quality" default="checkstyle">

    <import file="build-setup.xml"/>

    <property name="coverage.flush.interval" value="2000"/>
    <property name="coverage.file" value="${coverage.dir}/coverage.db"/>

    <fileset id="covered.code.fileset" dir="${main.src.dir}">
        <include name="**/*.java"/>
        <exclude name="**/sandbox/**"/>
        <exclude name="**/internal/edge/**"/>
        <!-- FIX Test then remove Ant & JUnit packages. -->
        <exclude name="**/integrate/junit3/**"/>
        <exclude name="**/integrate/ant/**"/>
    </fileset>

    <!-- FIX Turn test checks back on. -->
    <target name="checkstyle">
        <macro_checkstyle code.type="main"/>
        <!--<macro_checkstyle code.type="test"/>-->
    </target>

    <macrodef name="macro_checkstyle">
        <attribute name="code.type"/>
        <sequential>
            <taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle/checkstyle-all-4.2.jar"/>
            <checkstyle config="${etc.dir}/checkstyle/checkstyle-@{code.type}.xml">
                <fileset dir="${@{code.type}.src.dir}"/>
            </checkstyle>
        </sequential>
    </macrodef>

    <target name="-enable-clover">
        <taskdef resource="clovertasks" classpathref="test.class.path"/>
        <mkdir dir="${coverage.dir}"/>
        <clover-setup initString="${coverage.file}" tmpdir="${coverage.dir}" flushpolicy="interval" flushinterval="${coverage.flush.interval}">
            <fileset refid="covered.code.fileset"/>
        </clover-setup>
    </target>

    <macrodef name="macro_clover_report">
        <sequential>
            <taskdef resource="clovertasks" classpathref="test.class.path"/>
            <!-- Allow 2 x flush interval for any final coverage flushes -->
            <sleep milliseconds="${coverage.flush.interval}"/>
            <sleep milliseconds="${coverage.flush.interval}"/>
            <mkdir dir="${coverage.dir}"/>
            <clover-report>
                <current outfile="${coverage.dir}" title="${project.longname} Code Coverage">
                    <format type="html"/>
                </current>
            </clover-report>
        </sequential>
    </macrodef>

    <!-- FIX Re-enable this check once code is at 100%. -->
    <target name="-clover-check">
        <taskdef resource="clovertasks" classpathref="test.class.path"/>
        <clover-check target="100" haltOnFailure="false" failureProperty="coverage.failure"/>
    </target>

</project>