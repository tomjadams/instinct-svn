* Instinct Release 0.1.5 *

o Behavioural expectation API (i.e. mocking) - com.googlecode.instinct.expect.Expect.
o Moved old mocking code to jMock 2, removed jMock 1.2 dependency.
o Updated to jMock 2.1.
o Fixed Issue 4 - Add newlines between context output in brief runner
o Fixed concurrent modification issue with the JUnit runner.
o Added JUnit 4 runner, with @ContextClasses annotation.
o Added naming convention implementation.  Will now find methods starting with 'should' and 'must'. 

* Instinct Release 0.1.4 *

o Removed the need for specification methods to have a void return type (provides
  cleaner Groovy integration).
o Renamed BehaviourContext to just Context to bring into line with rest of code.
o Added command line context runner.
o Improved specification lifecycle listeners.
o Added BooleanChecker for state-based testing of booleans.
o Additional StringChecker expectations for length.
o Removed EasyMock dependency, added Objenisis for mocking concrete classes.
o Internal re-write to remove arrays and return typed Collections instead.
o Added Clover code coverage.
o Misc. features required for IntelliJ IDEA plugin.


* Instinct Release 0.1.3 *

o "Merged" state & bahavioural expectation API (both accessible from same class).
  Behaviour API still under development.
o Upgraded libraries to jMock 1.2.0, jMock 2.0.0 & JUnit 4.3.1.
o Added external integration points for runners & reporting. Thanks to Paul King
  for Groovy integration.


* Instinct Release 0.1.2 *

o State-based expectation API - com.googlecode.instinct.expect.Expect.
o First cut of JUnit 3 integration.


* Instinct Release 0.1.1 *

There was no public 0.1.1 release.


* Instinct Release 0.1.0 *

Initial public release.
o Support for running specifications (based on annotations), effectively
  providing simple JUnit 3.8.x feature parity.
o Core annotation support - BehaviourContext, Specification, BeforeSpecification,
  AfterSpecification.
o Ant task.
o Specifications are located based on annotations.
o Simplified mocking API, build on jMock 1.1.
o Simple Verification class (will change in future releases).
