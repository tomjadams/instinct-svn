<?xml version="1.0" encoding="UTF-8"?>
<project name="instinct-quality" default="-quality">

    <import file="build-setup.xml"/>

    <property name="checkstyle.lib.dir" value="${lib.dir}/checkstyle"/>
    <property name="checkstyle.results.dir" value="${build.dir}/checkstyle"/>

    <property name="coverage.flush.interval" value="1000"/>
    <property name="coverage.atomic.target" value="60%"/>
    <property name="coverage.slow.target" value="50%"/>

    <fileset id="covered.code.fileset" dir="${main.src.dir}">
        <include name="**/*.java"/>
        <exclude name="**/sandbox/**"/>
        <exclude name="**/internal/edge/**"/>
        <!-- FIX Test then remove Ant & JUnit packages. -->
        <exclude name="**/integrate/junit3/**"/>
        <exclude name="**/integrate/ant/**"/>
        <!-- FIX Don't exclude boost. -->
        <exclude name="**/internal/util/boost/**"/>
    </fileset>

    <target name="-quality" depends="-checkstyle"/>

    <!-- FIX Turn test checks back on. -->
    <target name="-checkstyle">
        <checkstyle.macro code.type="main"/>
        <!--<checkstyle.macro code.type="test"/>-->
    </target>

    <macrodef name="checkstyle.macro">
        <attribute name="code.type"/>
        <sequential>
            <taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle/checkstyle-all-4.2.jar"/>
            <checkstyle config="${etc.dir}/checkstyle/checkstyle-@{code.type}.xml">
                <fileset dir="${@{code.type}.src.dir}"/>
            </checkstyle>
        </sequential>
    </macrodef>

    <target name="-check-coverage">
        <clovercheck.macro test.type="atomic"/>
        <fail if="coverage.atomic.failure" message="Atomic test coverage did not meet the target of ${coverage.atomic.target}."/>
        <clovercheck.macro test.type="slow"/>
        <fail if="coverage.slow.failure" message="Slow test coverage did not meet the target of ${coverage.slow.target}."/>
    </target>

    <target name="-merge-coverage">
        <clovercommon.macro test.type="atomic"/>
        <clovercommon.macro test.type="slow"/>
        <property name="coverage.merged.dir" value="${build.dir}/coverage/merged"/>
        <mkdir dir="${coverage.merged.dir}"/>
        <clover-merge initString="${coverage.merged.dir}/coverage.db">
            <cloverDb initString="${coverage.atomic.dir}/coverage.db"/>
            <cloverDb initString="${coverage.slow.dir}/coverage.db"/>
        </clover-merge>
        <cloverreport.macro test.type="merged"/>
    </target>

    <target name="-disable-coverage">
        <cloverdisable.macro test.type="atomic"/>
        <cloverdisable.macro test.type="slow"/>
    </target>

    <macrodef name="clovercommon.macro">
        <attribute name="test.type"/>
        <sequential>
            <taskdef resource="clovertasks" classpathref="test.class.path"/>
            <property name="coverage.@{test.type}.dir" value="${build.dir}/coverage/@{test.type}"/>
        </sequential>
    </macrodef>

    <macrodef name="cloverenable.macro">
        <attribute name="test.type"/>
        <sequential>
            <clovercommon.macro test.type="@{test.type}"/>
            <mkdir dir="${coverage.@{test.type}.dir}"/>
            <clover-setup initString="${coverage.@{test.type}.dir}/coverage.db" tmpdir="${coverage.@{test.type}.dir}" flushpolicy="interval"
                    flushinterval="${coverage.flush.interval}">
                <fileset refid="covered.code.fileset"/>
            </clover-setup>
        </sequential>
    </macrodef>

    <macrodef name="cloverdisable.macro">
        <attribute name="test.type"/>
        <sequential>
            <clovercommon.macro test.type="@{test.type}"/>
            <clover-setup initString="${coverage.@{test.type}.dir}/coverage.db" enabled="false"/>
        </sequential>
    </macrodef>

    <macrodef name="cloverclean.macro">
        <attribute name="test.type"/>
        <sequential>
            <taskdef resource="clovertasks" classpathref="test.class.path"/>
            <clover-clean initString="${coverage.@{test.type}.dir}/coverage.db" keepdb="true" verbose="true"/>
        </sequential>
    </macrodef>

    <macrodef name="cloverreport.macro">
        <attribute name="test.type"/>
        <sequential>
            <!-- Allow 2 x flush interval for any final coverage flushes. -->
            <sleep milliseconds="${coverage.flush.interval}"/>
            <sleep milliseconds="${coverage.flush.interval}"/>
            <clovercommon.macro test.type="@{test.type}"/>
            <clover-report initString="${coverage.@{test.type}.dir}/coverage.db">
                <current outfile="${coverage.@{test.type}.dir}" title="${project.shortname} @{test.type} test code coverage">
                    <format type="html"/>
                </current>
            </clover-report>
        </sequential>
    </macrodef>

    <macrodef name="clovercheck.macro">
        <attribute name="test.type"/>
        <sequential>
            <clovercommon.macro test.type="@{test.type}"/>
            <clover-check initString="${coverage.@{test.type}.dir}/coverage.db" target="${coverage.@{test.type}.target}" haltOnFailure="false"
                    failureProperty="coverage.@{test.type}.failure"/>
        </sequential>
    </macrodef>

</project>