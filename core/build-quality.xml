<?xml version="1.0" encoding="UTF-8"?>
<project name="instinct-quality" default="-quality">

    <import file="build-setup.xml"/>

    <taskdef resource="cloverlib.xml" classpathref="spec.class.path"/>

    <property name="checkstyle.lib.dir" value="${lib.dir}/checkstyle"/>
    <property name="checkstyle.results.dir" value="${build.dir}/checkstyle"/>

    <property name="coverage.dir" value="${build.dir}/coverage"/>
    <property name="coverage.database" value="${coverage.dir}/coverage.db"/>
    <property name="coverage.flush.interval" value="1000"/>
    <property name="coverage.target" value="75%"/>
    <fileset id="covered.code.fileset" dir="${main.src.dir}">
        <include name="**/*.java"/>
        <exclude name="**/sandbox/**"/>
        <exclude name="**/internal/edge/**"/>
        <!-- FIX Test then remove Ant & JUnit packages. -->
        <exclude name="**/integrate/junit3/**"/>
        <exclude name="**/integrate/ant/**"/>
        <!-- FIX Don't exclude boost. -->
        <exclude name="**/internal/util/boost/**"/>
    </fileset>

    <target name="-quality" depends="-checkstyle"/>

    <!-- FIX Turn test checks back on. -->
    <target name="-checkstyle">
        <checkstyle.macro code.type="main"/>
        <!--<checkstyle.macro code.type="test"/>-->
        <!--<checkstyle.macro code.type="spec"/>-->
    </target>

    <macrodef name="checkstyle.macro">
        <attribute name="code.type"/>
        <sequential>
            <taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle/checkstyle-all-4.2.jar"/>
            <checkstyle config="${etc.dir}/checkstyle/checkstyle-@{code.type}.xml">
                <fileset dir="${@{code.type}.src.dir}"/>
            </checkstyle>
        </sequential>
    </macrodef>

    <target name="-check-coverage">
        <clover-check initString="${coverage.database}" target="${coverage.target}" haltOnFailure="false" failureProperty="coverage.failure"/>
        <fail if="coverage.failure" message="Specification/test code coverage did not meet the target of ${coverage.target}."/>
    </target>

    <target name="-disable-coverage">
        <clover-setup initString="${coverage.database}" enabled="false"/>
    </target>

    <macrodef name="cloverenable.macro">
        <sequential>
            <mkdir dir="${coverage.dir}"/>
            <clover-setup initString="${coverage.database}" tmpdir="${coverage.dir}" flushpolicy="threaded"
                    flushinterval="${coverage.flush.interval}">
                <fileset refid="covered.code.fileset"/>
                <testsources dir="${test.src.dir}"/>
                <testsources dir="${spec.src.dir}"/>
            </clover-setup>
        </sequential>
    </macrodef>

    <target name="-clover-clean">
        <clover-clean initString="${coverage.database}" keepdb="false"/>
    </target>

    <macrodef name="cloverreport.macro">
        <sequential>
            <!-- Allow 2 x flush interval for any final coverage flushes. -->
            <sleep milliseconds="${coverage.flush.interval}"/>
            <sleep milliseconds="${coverage.flush.interval}"/>
            <clover-report initString="${coverage.database}">
                <current outfile="${coverage.dir}" title="${project.shortname} Specification/Test Code Coverage">
                    <format type="html"/>
                    <testsources dir="${test.src.dir}" includes="**/*"/>
                    <testsources dir="${spec.src.dir}" includes="**/*"/>
                    <testresults dir="${spec.results.dir}" includes="TEST-*.xml"/>
                </current>
            </clover-report>
        </sequential>
    </macrodef>

</project>